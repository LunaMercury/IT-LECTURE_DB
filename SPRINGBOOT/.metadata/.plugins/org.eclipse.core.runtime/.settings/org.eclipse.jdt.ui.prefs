content_assist_autoactivation_triggers_java=.qwertyuioplkjhgfdsazxcvbnm_QWERTYUIOPLKJHGFDSAZXCVBNM
content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000
content_assist_favorite_static_members=org.assertj.core.api.Assertions.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*;org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.*;org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*;org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*;org.springframework.test.web.client.match.MockRestRequestMatchers.*;org.springframework.test.web.client.response.MockRestResponseCreators.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;org.hamcrest.CoreMatchers.*;org.junit.Assert.*;org.junit.Assume.*;org.junit.jupiter.api.Assertions.*;org.junit.jupiter.api.Assumptions.*;org.junit.jupiter.api.DynamicContainer.*;org.junit.jupiter.api.DynamicTest.*;org.mockito.ArgumentMatchers.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="com.example.app.domain.dto.PersonDto"><rhs name\="com.example.app.domain.dto.PersonDto"/></lhs><lhs name\="java.lang.Enum"><rhs name\="org.springframework.http.HttpStatus"/><rhs name\="org.springframework.web.bind.annotation.RequestMethod"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.String"/></lhs><lhs name\="org.springframework.web.servlet.ModelAndView"><rhs name\="org.springframework.web.servlet.ModelAndView"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.LocalDate"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.LocalDate"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.LocalDate"/></lhs><lhs name\="java.time.chrono.ChronoLocalDate"><rhs name\="java.time.LocalDate"/></lhs><lhs name\="java.beans.PropertyEditor"><rhs name\="com.example.app.controller.UserController$DateTestEditor"/><rhs name\="com.example.app.controller.UserController$PhoneNumberEditor"/></lhs><lhs name\="java.util.Date"><rhs name\="java.sql.Timestamp"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.sql.Timestamp"/></lhs><lhs name\="java.sql.Timestamp"><rhs name\="java.sql.Timestamp"/></lhs><lhs name\="com.example.app.domain.dto.MemoDto"><rhs name\="com.example.app.domain.dto.MemoDto"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="org.springframework.http.HttpEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="org.springframework.http.ResponseEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="java.io.File"><rhs name\="java.io.File"/></lhs><lhs name\="org.springframework.web.servlet.HandlerInterceptor"><rhs name\="com.example.app.interceptor.MemoInterceptor"/></lhs><lhs name\="org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.handler.AbstractUrlHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.handler.MatchableHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.HandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.handler.AbstractHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.core.Ordered"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.context.support.WebApplicationObjectSupport"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.context.ServletContextAware"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.context.support.ApplicationObjectSupport"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.mvc.Controller"><rhs name\="com.example.app.handler.CustomHandler"/></lhs><lhs name\="com.example.app.handler.CustomHandler"><rhs name\="com.example.app.handler.CustomHandler"/></lhs><lhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"><rhs name\="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/></lhs><lhs name\="org.springframework.context.EmbeddedValueResolverAware"><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping"><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.handler.AbstractHandlerMethodMapping"><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/><rhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"/></lhs><lhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"><rhs name\="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/></lhs><lhs name\="org.springframework.web.servlet.mvc.condition.RequestCondition"><rhs name\="org.springframework.web.servlet.mvc.method.RequestMappingInfo"/></lhs><lhs name\="org.springframework.security.crypto.password.PasswordEncoder"><rhs name\="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/></lhs><lhs name\="org.springframework.security.web.csrf.CsrfTokenRepository"><rhs name\="org.springframework.security.web.csrf.CookieCsrfTokenRepository"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="org.springframework.security.core.userdetails.UserDetails"><rhs name\="com.example.app.config.auth.PrincipalDetails"/></lhs><lhs name\="org.springframework.security.web.authentication.rememberme.PersistentTokenRepository"><rhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"/></lhs><lhs name\="org.springframework.jdbc.core.support.JdbcDaoSupport"><rhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"/></lhs><lhs name\="org.springframework.dao.support.DaoSupport"><rhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"/></lhs><lhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"><rhs name\="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"/></lhs></history>
content_assist_number_of_computers=22
eclipse.preferences.version=1
org.eclipse.jdt.ui.exception.name=e
org.eclipse.jdt.ui.formatterprofiles.version=21
org.eclipse.jdt.ui.gettersetter.use.is=true
org.eclipse.jdt.ui.overrideannotation=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.typefilter.disabled=java.rmi.*;
org.eclipse.jdt.ui.typefilter.enabled=com.sun.*;io.micrometer.shaded.*;java.awt.*;jdk.*;org.graalvm.*;sun.*;
sourceHoverBackgroundColor=47,47,47
spelling_locale_initialized=true
typefilter_migrated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
